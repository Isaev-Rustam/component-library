{
  "compilerOptions": {
    // Определяет стандарт ECMAScript, к которому TypeScript будет компилироваться (в данном случае ES5).
    "target": "es5",

    // Указывает формат модулей, который будет использоваться в выходном коде (здесь ESNext для динамических импортов и других современных возможностей).
    "module": "esnext",

    // Генерирует декларационные файлы (`.d.ts`) для типов, чтобы другие проекты могли использовать типы из этого проекта.
    "declaration": true,

    // Указывает директорию, в которую будут сохранены декларационные файлы (`.d.ts`).
    "declarationDir": "dist/types",

    // Указывает директорию, куда будет компилироваться весь выходной JavaScript код.
    "outDir": "dist",

    // Определяет, как TypeScript должен обрабатывать JSX (используется формат, совместимый с React).
    "jsx": "react-jsx",

    // Включает совместимость с CommonJS модулями и автоматическое преобразование `default` экспорта в `module.exports`.
    "esModuleInterop": true,

    // Пропускает проверку типов для библиотек в `node_modules`, что ускоряет компиляцию.
    "skipLibCheck": true,

    // Гарантирует, что имена файлов будут использовать одинаковый регистр, что предотвращает ошибки на файловых системах, которые учитывают регистр.
    "forceConsistentCasingInFileNames": true,

    // Включает строгий режим компиляции, что активирует все строгие проверки типов и помогает писать более надежный код.
    "strict": true,

    // Указывает способ разрешения модулей, чтобы TypeScript знал, где искать файлы модулей. В данном случае используется система модулей Node.js.
    "moduleResolution": "node"
  },

  // Определяет, какие файлы или директории должны быть включены в процесс компиляции.
  "include": ["src"],

  // Определяет, какие файлы или директории должны быть исключены из процесса компиляции.
  "exclude": ["node_modules", "dist"]
}
